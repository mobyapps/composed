
server {
    listen       80;
    listen  [::]:80;
    server_name  example.com;
    root         /var/www/ip_site;

    access_log     off;
    log_not_found  off;

    return 301 https://example.com$request_uri;
}

server {
    listen       443 ssl http2;
    listen  [::]:443 ssl http2;
    server_name  www.example.com;
    root         /var/www/ip_site;

    access_log     off;
    log_not_found  off;

    ssl_certificate      /repos/nginxconf/ssl/example.com/fullchain.cer;
    ssl_certificate_key  /repos/nginxconf/ssl/example.com/example.com.key;
    ssl_session_timeout  1d;
    ssl_session_cache    shared:MozSSL:10m;
    ssl_session_tickets  off;

    ssl_dhparam /repos/nginxconf/ffdhe2048.txt;
    ssl_trusted_certificate /repos/nginxconf/ssl/example.com/fullchain.cer;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver
      # (1 AliDNS)
      223.5.5.5 223.6.6.6 [2400:3200::1] [2400:3200:baba::1]
      # (2 Cloudflare)
      1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001]
      # (3 OpenDNS)
      # 208.67.222.222 208.67.220.220 [2620:119:35::35] [2620:119:53::53]
      valid=60s;
    resolver_timeout 3s;

    add_header Strict-Transport-Security "max-age=604800" always;

    return 301 https://example.com$request_uri;
}

server {
    listen       443 ssl http2;
    listen  [::]:443 ssl http2;
    server_name  example.com;
    root  $sitesdir/$entrydir/web;

    set $sitesdir /repos/project/project/sites;
    set $entrydir example.com;

    include /repos/nginxconf/http/example.com.ssl.conf;

    location / {
        # access_by_lua_file /path/to/access.lua;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ /\. {
        access_log     off;
        log_not_found  off;
        return 404;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param ENTRY_DIR $entrydir;

        internal;
    }

    location = /example.php {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
    }

    location ~ \.php$ {
        return 404;
    }
}
